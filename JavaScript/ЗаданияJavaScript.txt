<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>Задания JS</title>
<script>
    function showTime()
    {
	let time=new Date();	
	let par=document.getElementById("DT");
	let tm=document.getElementById("TM");

	d=time.getDate()
	if(d<10)
	d="0"+d;	

	h=time.getHours();
	if(h<10)
	h="0"+h;

	m=time.getMinutes();
	if(m<10)
	m="0"+m;

	s=time.getSeconds();
	if(s<10)
	s="0"+s;

	y=time.getFullYear();
	
	function getWeekDay(date)
	{
	let days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];
	return days[date.getDay()];
	}

	function getNamemonth(date)
	{
	let month = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];
	return month[date.getMonth()];
	}
	    
	dn=getWeekDay(time);
	mn=getNamemonth(time);

	par.innerHTML=dn+", "+y+" "+d+" "+mn;
	tm.innerHTML=h+"/"+m+"/"+s;
    }
</script>
</head>
<body>
<style>
	.accordion {
	  margin-left:auto;
	  margin-right:auto;
	  width:500px;
	  border:2px solid black;
	  border-radius:30px;
  	  font-size: 20px;
	  font-family:verdana;
	  background-image:linear-gradient(green, yellow);
	  text-align:center;
	}
	
	.accordion:hover {
	  width:500px;
	  border:2px solid black;
	  border-radius:30px;
  	  font-size: 20px;
	  font-family:verdana;
	  background-image:linear-gradient(green, yellow);
	  text-align:center;
	  opacity:0.4;
	}

	.content {
	  margin-left:auto;
	  margin-right:auto;
	  width:500px;
	  font-size: 20px;
	  font-family:verdana;
	  transition:0.4s ease-in-out;
	  max-height:0;
	  overflow:hidden;
	}

	.calendar {
	  font-family: Sans-serif;
	  margin: 20px auto;
	  width: 350px;
	}

	.header {
	  display: flex;
	  justify-content: space-between;
	  align-items: center;
	  background-image:linear-gradient(green, yellow);
	  padding: 0 10px;
	}

	.month {
	  font-size: 20px;
	  color: #000;
	}

	.table-container {width:100%;}

	table {
	  width: 100%;
	  table-layout: fixed;
	}

	th {
	  height: 20px;
	  text-align: center;
	  border: 3px solid grey;
	}

	td {
	  height: 30px;
	  border: 1px solid center;
	  text-align: center;
	}

	.weekend {color: red;}

	.today{
	  height: 19px;
	  border: 3px solid #f00;
	  border-radius: 8px;
	}

	#Container4 {
   	  display: flex;
  	  flex-direction: column;
   	  justify-content: center;
   	  align-items: center;
  	}

	#Container4Blocks {
   	  display: flex;
   	  flex-direction: column;
      	  align-items: center;
   	  width: 1100px;
  	}

	.Blocks {
   	  height: 150px;
   	  width: 150px;
   	  border: 2px solid green;
   	  background-size: 100%;
	  background-image:linear-gradient(green, yellow);
  	  background-repeat: no-repeat;
  	  margin: 10px;
  	}

	img {
   	  width: 100%;
   	  height: 100%;
  	}

	.AddElem{
	  width: 270px;
	  height:40px;
	  border-radius:20px;
	  background-color: lime; 
	  font-family:sans-serif;
	  font-size:18pt;
	}

	.RemoveElem{
	  width: 270px;
	  height:40px;
	  border-radius:20px;
	  background-color: red; 
	  font-family:sans-serif;
	  font-size:18pt;
	}

	.AddElem:hover{
	  width: 270px;
	  height:40px;
	  border-radius:20px;
	  background-color: lime; 
	  font-family:sans-serif;
	  font-size:18pt;
	  opacity:0.6;
	}

	.RemoveElem:hover{
	  width: 270px;
	  height:40px;
	  border-radius:20px;
	  background-color: red; 
	  font-family:sans-serif;
	  font-size:18pt;
	  opacity:0.6;
	}

	.task8img{
	width:500px;
	height:350px;
	margin-top: -100px;
	}
</style>

<div class="accordion">
 <p>Задание 1 Вариант 8/4/4 
   <p>
      <b>Формат даты:</b> день_недели, ГГГГ ДД месяц. <br>
      <b>Формат времени:</b> ЧЧ-ММ-СС (am/pm). <br>
      <b>Расположение строк:</b> cнизу.
   </p>
 </p>
</div>
   <div class="content" id="content1">
	<div id="b1">
            <p id="DT"></p>
            <p id="TM"></p>
	</div>
   </div>
<script>
    setInterval(showTime,1000);
</script>


<div class="accordion">
 <p>Задание 2</p>
 <p><b>Календарь</b></p>
</div>
  <div class="content" id="content2">
   <div class="calendar">
    <div class="header"> <h2 class="month"></h2> </div>
     <div class="table-container"></div>
   </div>
</div>


<div class="accordion">
 <p>Задание 3 Вариант 5</p>
 <p><b>Получить список таблиц в DOM-дереве и вывести их количество</b></p>
</div>
   <div class="content" id="content3">
    <h3>Количество таблиц: <span id="task3"></span></h3>
      <script>
	setTimeout(function () {
	  domTreeTables = document.getElementsByTagName("table");
	  task3h3 = document.getElementById("task3");
	  task3h3.textContent = domTreeTables.length;
	  console.log(domTreeTables.length);
	}, 1000);
      </script>	
   </div>


<div class="accordion">
 <p>Задание 4 вариант 0</p>
 <p><b>Через 100 мс отображать картинку в одном из блоков</b></p>
</div>
   <div class="content">
     <div id="Container4">
	<div id="Container4Blocks">
	   <div id="Block1" class="Blocks"></div>
	   <div id="Block2" class="Blocks"></div>
	   <div id="Block3" class="Blocks"></div>
	   <div id="Block4" class="Blocks"></div>
	</div>
     </div>
   </div>


<div class="accordion">
 <p>Задание 5 Вариант 0/1</p>
 <p><b>Запрос содержимого с помощью диалогового окна prompt. При удалении элемента сообщить его содержимое, запросить подтверждение удаления</b></p>
 <p><b>Элемент:</b> li в список ul</p>
 <p><b>Порядок вставки:</b> удаление сверху от текущего</p>
</div>
   <div class="content" id="content5">
     <h2>Список элементов:</h2>
      <ul id="myList">

      </ul>
	<button class="AddElem" onclick="addElement()">Добавить элемент</button>
	<button class="RemoveElem" onclick="removeElement()">Удалить элемент</button>
   </div>


<div class="accordion">
 <p>Задание 6 Вариант 8</p>
 <p><b>Действие:</b> Клик в ячейке таблицы(4*4)</p>
 <p><b>Реакция:</b> Появляется окно prompt. Текст из него помещается в ячейку</p>
</div>
   <div class="content" id="content6">
     <table class ="mytable" id="myTable">
	<tr>
	 <td>1</td>
	 <td>2</td>
	 <td>3</td>
	 <td>4</td>
	</tr>

	<tr>
	 <td>5</td>
	 <td>6</td>
	 <td>7</td>
	 <td>8</td>
	</tr>

	<tr>
	 <td>1</td>
	 <td>2</td>
	 <td>3</td>
	 <td>4</td>
	</tr>

	<tr>
	 <td>5</td>
	 <td>6</td>
	 <td>7</td>
	 <td>8</td>
	</tr>
     </table>
   </div>


<div class="accordion">
 <p>Задание 7</p>
 <p><b>Меню со сладостями</b></p>
</div>
   <div class="content" id="content7">
     <div class="menu cand">
       <h3 class="title">Сладости</h3>
	 <ul id="list7">
	   <li>Торт</li>
	   <li>Мороженое</li>
	   <li>Пирожное</li>
	   <li>Леденец</li>
	 </ul>
      <h3 id="end7">Сладости закончились!</h3>
     </div>
   </div>


<div class="accordion">
 <p>Задание 8</p>
 <p><b>Прозрачность картинки при наведении курсора</b></p>
</div>
   <div class="content" id="content8">
     <div class="task8container">
       <h3 class="task8text">Ключик от квартиры, где деньги лежат</h3>
       <img class="task8img" id="task8" src="https://biographe.ru/wp-content/uploads/2021/09/12112-1.jpg" alt="Бендер" />
     </div>
   </div>


<div class="accordion">
 <p>Задание 9-10<p>
 <p><b>Анкета разработчика</b></p>
</div>
   <div class="content" id="content9_10">
   <form id="task9-form" > 
					<input type="text" id="fio" placeholder="ФИО (отчество, если имеется)">
					<label id="FioErr" style="color:red; display:none">Неверный формат ФИО</label>
					<input type="text" id="email2" placeholder="E-mail">
					<label id="MailErr" style="color:red; display:none">Неверный формат почты</label>
					<input type="password" id="password2" placeholder="Пароль">
					<label id="PassErr" style="color:red; display:none">Неверный формат пароля. Пароль должен состоять хотя бы из 8 символов и хотя бы одной цифры.</label>
					<input type="password" id="password3" placeholder="Подтвердите пароль">
					<label id="ConfPassErr" style="color:red; display:none">Пароли не совпадают</label>
					<input type="phone" id="phone" placeholder="Номер телефона">
					<label id="PhoneErr" style="color:red; display:none ">Неверный формат телефона</label><br>
					<label for="birthday">Дата рождения:</label><br>
					<input type="date" id="birthday" name="birthday">
					<label id="birthErr" style="color:red; display:none">Неверный формат даты</label>

					<p class = "check" style="font-size: 17px;">Какие языки вы знаете?</p>
					<label class="language"><input type="checkbox" name="languages" value="C#"> C#</label>
					<label class="language"><input type="checkbox" name="languages" value="Dart"> Dart</label>
					<label class="language"><input type="checkbox" name="languages" value="Python"> Python</label>
					<label class="language"><input type="checkbox" name="languages" value="Swift"> Swift</label>

					<p class="check_gen" style="font-size: 17px;">Пол</p>
					<label class="language"><input type="radio" name="gender" value="male"> М</label>
					<label class="language"><input type="radio" name="gender" value="female"> Ж</label>

					<p style="display: block; font-size: 17px;" for="professions">Выберите вашу профессию:</p>
					<select style="display: block; font-size: 17px;" id="professions" name="professions" onchange="showOtherInput()">
						<option value="developer">WEB-дизайнер</option>
						<option value="designer">Front-end</option>
						<option value="manager">Back-end</option>
						<option value="writer">Люблю виджеты</option>
						<option value="other">Другое</option>
					</select>

					<div id="other-input" style="display: none;">
						<label style="display: block; font-size: 17px;  margin-bottom: 20px;" for="other-profession">Напишите свою профессию:</label>
						<input style="display: block; font-size: 17px;  margin-bottom: 20px;" type="text" id="other-profession" name="other-profession">
					</div>

					<p style="display: block; font-size: 19px;">Расскажите немного о себе:</p>
					<textarea id="AboutMe" style="display: block; font-size: 17px;" rows="4" cols="50" scrolling="auto"  placeholder="Личная характеристика"></textarea>

					<button type="submit">Зарегистрироваться</button>
					<button type="button" id="clear-button">Очистить</button>
				</form>
				<script>
					const form = document.querySelector('form');
					const submitButton = document.querySelector('[type="submit"]');
					submitButton.disabled = true;

					const fioInput = document.querySelector('#fio');

					fioInput.addEventListener('input', function(event) {
						const fioRegex = /^(?!Романов Владислав)[А-ЯЁ][а-яё]+ [А-ЯЁ][а-яё]+( [А-ЯЁ][а-яё]+)?$/;;
						const fioValue = event.target.value.trim();
						const fioErr = document.querySelector('#FioErr');

						if (fioRegex.test(fioValue)) {
							fioInput.style.borderColor = '#ccc';
							fioErr.style.display = "none";
							fioInput.classList.remove('error');
							submitButton.disabled = false;
						} else {
							fioInput.style.borderColor = 'red';
							fioErr.style.display = "block";
							fioInput.classList.add('error');
							submitButton.disabled = true;
						}
					});

					document.querySelector('#email2').addEventListener('input', function(event) {
						const emailInput = event.target;
						const emailValue = emailInput.value;
						const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
						const MailErr = document.querySelector('#MailErr');

						if (emailRegex.test(emailValue)) {
							emailInput.style.borderColor = '#ccc';
							MailErr.style.display = "none";
							emailInput.classList.remove('error');
							submitButton.disabled = false;
						} else {
							emailInput.style.borderColor = 'red';
							MailErr.style.display = "block";
							emailInput.classList.add('error');
							submitButton.disabled = true;
						}
					});

					document.querySelector('#password2').addEventListener('input', function(event) {
						const passwordInput = event.target;
						const passwordValue = passwordInput.value;
						const passwordRegex = /^(?=.*\d).{8,}$/;
						const PassErr= document.querySelector('#PassErr');

						if (passwordRegex.test(passwordValue)) {
							passwordInput.style.borderColor = '#ccc';
							PassErr.style.display = "none";
							passwordInput.classList.remove('error');
							submitButton.disabled = false;
						} else {
							passwordInput.style.borderColor = 'red';
							PassErr.style.display = "block";
							passwordInput.classList.add('error');
							submitButton.disabled = true;
						}
					});

					document.querySelector('#password3').addEventListener('input', function(event) {
						const passwordConfirmInput = event.target;
						const passwordConfirmValue = passwordConfirmInput.value;
						const passwordValue = document.querySelector('#password2').value;
						const ConfPassErr = document.querySelector('#ConfPassErr');

						if (passwordConfirmValue === passwordValue) {
							passwordConfirmInput.style.borderColor = '#ccc';
							ConfPassErr.style.display = "none";
							passwordConfirmInput.classList.remove('error');
							submitButton.disabled = false;
						} else {
							passwordConfirmInput.style.borderColor = 'red';
							ConfPassErr.style.display = "block";
							passwordConfirmInput.classList.add('error');
							submitButton.disabled = true;
						}
					});

					document.querySelector('#phone').addEventListener('input', function(event) {
						const phoneInput = event.target;
						const phoneValue = phoneInput.value;
						const phoneRegex = /^(\+7)?\s?(\(\d{3}\)|\d{3})\s?\d{3}(-|\s)?\d{2}(-|\s)?\d{2}$/;
						const PhoneErr = document.querySelector('#PhoneErr');

						if (phoneRegex.test(phoneValue)) {
							phoneInput.style.borderColor = '#ccc';
							PhoneErr.style.display = "none";
							phoneInput.classList.remove('error');
							submitButton.disabled = false;
						} else {
							phoneInput.style.borderColor = 'red';
							PhoneErr.style.display = "block";
							phoneInput.classList.add('error');
							submitButton.disabled = true;
						}
					});

					const birthdayInput = document.getElementById('birthday');

					birthdayInput.addEventListener('change', function(event) {
						const birthdayValue = new Date(event.target.value);
						const minDate = new Date('1950-01-01');
						const maxDate = new Date('2023-12-31');
						const birthErr = document.querySelector('#birthErr');

						if (birthdayValue < minDate || birthdayValue > maxDate) {
							birthdayInput.style.borderColor = 'red';
							birthErr.style.display = "block";
							submitButton.disabled = true;
						} else {
							birthErr.style.display = "none";
							birthdayInput.style.borderColor = '#ccc';
							submitButton.disabled = false;
						}
					});

					const languageCheckboxes = document.querySelectorAll('input[type="checkbox"][name="languages"]');
					const languagesTitle = document.querySelector('.check');

					document.querySelector('#task9-form').addEventListener('submit', function(event) {
						let isLanguageSelected = false;

						for (const checkbox of languageCheckboxes)
						{
							if (checkbox.checked) {
								isLanguageSelected = true;
								break;
							}
						}

						if (isLanguageSelected) {
							languagesTitle.style.color = 'black';
							languagesTitle.classList.remove('error');
						} else {
							languagesTitle.style.color = 'red';
							languagesTitle.classList.add('error');
							event.preventDefault();
						}
					});

					const genderRadios = document.querySelectorAll('input[type="radio"][name="gender"]');
					const genderTitle = document.querySelector('.check_gen');

					document.querySelector('#task9-form').addEventListener('submit', function(event) {
						let isGenderSelected = false;

						for (const radio of genderRadios) {
							if (radio.checked) {
								isGenderSelected = true;
								break;
							}
						}

						if (!isGenderSelected) {
							event.preventDefault();
							genderTitle.style.color = 'red';
						}
					});

					function showOtherInput() {
						const select = document.getElementById("professions");
						const otherInput = document.getElementById("other-input");
						if (select.value === "other") {
							otherInput.style.display = "block";
						} else {
							otherInput.style.display = "none";
						}
					}

					const clearBtn2 = document.querySelector('#clear-button');
					const inputFields2 = document.querySelectorAll('input');

					clearBtn2.addEventListener('click', function() {
						const emailInput = document.querySelector('#email2');
						const passwordInput = document.querySelector('#password2');
						const passwordConfirmInput = document.querySelector('#password3');
						const phoneInput = document.querySelector('#phone');
						const AboutMe = document.getElementById('AboutMe');
						const checkboxes = document.querySelectorAll('input[type="checkbox"]');
						const radios = document.querySelectorAll('input[type="radio"]');
						const prof = document.getElementById("professions");
						const otherInput = document.getElementById("other-input");

						checkboxes.forEach(checkbox => {
							checkbox.checked = false;
						});
						radios.forEach(radio => {
							radio.checked = false;
						});

						inputFields2.forEach(input => input.value = '');
						fioInput.style.borderColor = '#ccc';
						emailInput.style.borderColor = '#ccc';
						passwordInput.style.borderColor = '#ccc';
						passwordConfirmInput.style.borderColor = '#ccc';
						phoneInput.style.borderColor = '#ccc';
						birthdayInput.style.borderColor = '#ccc';
						languagesTitle.style.color = 'black';
						genderTitle.style.color = 'black';
						AboutMe.value = '';
						prof.selectedIndex = 0;
						otherInput.style.display = "none";
					});

				</script>
		

</div>

<script> 
	document.querySelectorAll('.accordion').forEach((el) => {
	  el.addEventListener('click', () => {
		
		let content = el.nextElementSibling;
		console.log(content)

		if(content.style.maxHeight){
			document.querySelectorAll('.content').forEach((el) => el.style.maxHeight = null)
		} else {
			document.querySelectorAll('.content').forEach((el) => el.style.maxHeight = null)
			content.style.maxHeight = content.scrollHeight + 'px'
		  }
	  })
	})



function bigC(){
const calendar = document.querySelector(".calendar");
const monthTxt = calendar.querySelector(".month");
const tableContainer = calendar.querySelector(".table-container");

let today = new Date();
let currentMonth = today.getMonth();
let currentYear = today.getFullYear();

const monthNames = [
"Январь",
"Февраль",
"Март",
"Апрель",
"Май",
"Июнь",
"Июль",
"Август",
"Сентябрь",
"Октябрь",
"Ноябрь",
"Декабрь",
];

function createCalendarTable(month, year) {
let firstDay = new Date(year, month, 1);
let lastDay = new Date(year, month + 1, 0);
let days = lastDay.getDate();
let startDay = firstDay.getDay() - 1;
let dayToday = 0;

let table = document.createElement("table");
let thead = document.createElement("thead");
let tbody = document.createElement("tbody");
let tr, td;

// Создать заголовок таблицы
tr = document.createElement("tr");
for (let i = 0; i < 7; i++) {
td = document.createElement("th");
td.textContent = ["Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс"][i];
tr.appendChild(td);
}
thead.appendChild(tr);
table.appendChild(thead);

// Создать ячейки таблицы
for (let i = 0; i < 6; i++) {
tr = document.createElement("tr");
for (let j = 0; j < 7; j++) {
td = document.createElement("td");

if (i === 0 && j < startDay) {
td.textContent = "";
} else if (dayToday < days) {
dayToday++;
td.textContent = dayToday;

if (j === 5 || j === 6) {
td.classList.add("weekend");
}

if (dayToday === today.getDate() && month === today.getMonth() && year === today.getFullYear()) {
td.classList.add("today");
}
}
tr.appendChild(td);
}
tbody.appendChild(tr);
}

table.appendChild(tbody);
return table;
}

function showCalendar(month, year) {
monthTxt.textContent = monthNames[month] + " " + year;


let oldTable = tableContainer.querySelector("table");
if (oldTable) {
tableContainer.removeChild(oldTable);
}

let newTable = createCalendarTable(month, year);
tableContainer.appendChild(newTable);
}


showCalendar(currentMonth, currentYear);


calendar.addEventListener("wheel", (event) => {


});
}

bigC();


//Task4
function getRandomInt(max) {
return Math.floor(Math.random() * max);
}
function DelImg(){
var Num = document.querySelector("#Container4Blocks").children.length;

for (i=0; i<Num; i++)
{
if (document.querySelector("#Container4Blocks").children[i].firstChild !== null) {
document.querySelector("#Container4Blocks").children[i].removeChild(document.querySelector("#Container4Blocks").children[i].firstChild);
}
}
}
function FunctionForTask4(){
DelImg();
let MyContain = document.querySelector("#Container4Blocks");
var MaxBlocks = MyContain.children.length;
let RandomInt = getRandomInt(MaxBlocks);
let img = document.createElement('img');
img.src = "https://sun9-east.userapi.com/sun9-76/s/v1/ig2/nTogG9d50s4GbeLgmpV8uLWB4k5to2LWcSC0N2zHIIvzWMywXeWaQ7dh-fgwu3twGK1v-LuhrLP7J82Jor6qNh12.jpg?size=312x200&quality=96&type=album";
MyContain.children[RandomInt].append(img);
}
setInterval(FunctionForTask4, 100);



const list = document.getElementById('myList');
    function addElement() {
	const content = prompt('Введите новый элемент');
	   if (!content) {return;}
		const newItem = document.createElement('li');
		newItem.textContent = content;
		list.appendChild(newItem);
	   }

	function removeElement() {
		const selected = document.querySelector('li.selected');
		  if (!selected) {
			alert('Выберите элемент для удаления');
			return;
		  }	
					
	const confirmation = confirm(`Вы уверены, что хотите удалить элемент "${selected.textContent}"?`);
		if (!confirmation) {return;}
		list.removeChild(selected);
	}

		list.addEventListener('click', (event) => {
			const target = event.target;
			if (target.tagName !== 'LI') {return;}
			// Если элемент уже выбран, снимаем выделение
				const selected = document.querySelector('li.selected');
				  if (selected) {selected.classList.remove('selected');}
				    target.classList.add('selected');
     });






let table = document.getElementById("myTable");
			
				for (let i = 0; i < table.rows.length; i++) {
					for (let j = 0; j < table.rows[i].cells.length; j++) {
						table.rows[i].cells[j].addEventListener("click", function() {
							let text = prompt("Введите текст для ячейки:");
							if (text !== null) {
							this.innerHTML = text;
							}
						});
					}
				}






let endtext = document.getElementById("end7");
				endtext.style.visibility = "hidden";
		
				let menuElement = document.querySelector(".cand");
				let titleElement = menuElement.querySelector(".title");
				
				titleElement.onclick = function () {
				  menuElement.classList.toggle("hidden");
				};
		
				document.addEventListener("DOMContentLoaded", function () {
				  const itemsList = document.getElementById("list7");
		
				  itemsList.addEventListener("click", function (event) {
					let target = event.target;
					if (target.tagName === "LI") {
					  target.classList.add("fading");
					  setTimeout(() => {
						target.remove();
					  }, 100);
					}
					
					if (itemsList.childElementCount == 1) {
						setTimeout(()=>{
							endtext.style.visibility = "visible";
							endtext.classList.add("fading_out");
						},120);
					}
				  });
				});




let element=document.getElementById('task8');
element.onmouseover=function ()
{
  for(let i=1,a=0;i>0;i-=0.01,a+=10){
    setTimeout(function (){
      element.style.opacity=i;
    },a)
  }
}

element.onmouseout=function ()
{
  for(let i=0,a=0;i<=1;i+=0.01,a+=10){
    setTimeout(function (){
      element.style.opacity=i;
    },a)
  }
}

</script>
</body>
</html>